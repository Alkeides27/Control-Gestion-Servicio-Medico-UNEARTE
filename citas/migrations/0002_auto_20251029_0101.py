# Generated by Django 5.2.6 on 2025-10-29 05:01

from django.db import migrations

def load_initial_data(apps, schema_editor):
    EstadoCita = apps.get_model('citas', 'EstadoCita')
    TipoCita = apps.get_model('citas', 'TipoCita')
    MotivoCita = apps.get_model('citas', 'MotivoCita')

    # Create appointment statuses with current data (excluding test data)
    # Changed "Completada" from green (#28a745) to light purple (#9370DB) as requested
    # to make it more visible against white background
    estados = [
        {'nombre': 'Programada', 'descripcion': None, 'color': '#007bff'},
        {'nombre': 'Cancelada', 'descripcion': None, 'color': '#dc3545'},
        {'nombre': 'Completada', 'descripcion': None, 'color': '#9370DB'},  # Changed to light purple from original green
        {'nombre': 'No asistió', 'descripcion': None, 'color': '#ffc107'},
    ]
    for estado in estados:
        EstadoCita.objects.get_or_create(nombre=estado['nombre'], defaults={
            'descripcion': estado['descripcion'],
            'color': estado['color']
        })

    # Create appointment types with current data (excluding test data)
    tipos = [
        {'nombre': 'Consulta médica', 'descripcion': 'Consulta médica general', 'duracion_estimada': 30},
        {'nombre': 'Revisión', 'descripcion': 'Revisión de tratamiento o evolución', 'duracion_estimada': 20},
        {'nombre': 'Emergencia', 'descripcion': 'Atención de emergencia médica', 'duracion_estimada': 60},
        {'nombre': 'Control', 'descripcion': 'Control de seguimiento', 'duracion_estimada': 15},
        {'nombre': 'Consulta de Rutina', 'descripcion': 'Consulta Rutinaria', 'duracion_estimada': 30},
    ]
    for tipo in tipos:
        TipoCita.objects.get_or_create(nombre=tipo['nombre'], defaults={
            'descripcion': tipo['descripcion'],
            'duracion_estimada': tipo['duracion_estimada']
        })

    # Create appointment reasons with current data (excluding test data)
    motivos = [
        {'nombre': 'Chequeo general', 'descripcion': 'Revisión médica general de rutina'},
        {'nombre': 'Dolor abdominal', 'descripcion': 'Dolor o molestias en la zona abdominal'},
        {'nombre': 'Fiebre', 'descripcion': 'Presencia de fiebre persistente'},
        {'nombre': 'Dolor de cabeza', 'descripcion': 'Dolor de cabeza o migraña'},
        {'nombre': 'Problemas respiratorios', 'descripcion': 'Dificultad para respirar o tos persistente'},
        {'nombre': 'Seguimiento', 'descripcion': 'Seguimiento de tratamiento médico'},
        {'nombre': 'Vacunación', 'descripcion': 'Administración de vacunas'},
    ]
    for motivo in motivos:
        MotivoCita.objects.get_or_create(nombre=motivo['nombre'], defaults={
            'descripcion': motivo['descripcion']
        })

def reverse_load_initial_data(apps, schema_editor):
    EstadoCita = apps.get_model('citas', 'EstadoCita')
    TipoCita = apps.get_model('citas', 'TipoCita')
    MotivoCita = apps.get_model('citas', 'MotivoCita')

    # Delete all records created by this migration
    EstadoCita.objects.filter(nombre__in=[
        'Programada', 'Cancelada', 'Completada', 'No asistió'
    ]).delete()
    TipoCita.objects.filter(nombre__in=[
        'Consulta médica', 'Revisión', 'Emergencia', 'Control', 'Consulta de Rutina'
    ]).delete()
    MotivoCita.objects.filter(nombre__in=[
        'Chequeo general', 'Dolor abdominal', 'Fiebre', 'Dolor de cabeza',
        'Problemas respiratorios', 'Seguimiento', 'Vacunación'
    ]).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('citas', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(load_initial_data, reverse_load_initial_data),
    ]